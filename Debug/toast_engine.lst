SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Ceddy D\Documents\CASIO\fx-9860G SDK\ENGINE\toast_engine.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      toast_engi     1    #include <stdlib.h>             //malloc
      toast_engi     2    #include <stdarg.h>             //arg
      toast_engi     3    
      toast_engi     4    #include "toast_engine.h"
      toast_engi     5    
      toast_engi     6    
      toast_engi     7    void Init_Sprite(Sprite *outputSprite, int *inputSprite)
P   00000000              _Init_Sprite:                    ; function: Init_Sprite
                                                           ; frame size=0
      toast_engi     8    {
      toast_engi     9            int size;
      toast_engi    10            int i;
      toast_engi    11            
      toast_engi    12            // Gets total byte size of template.
      toast_engi    13            size = sizeof(inputSprite) / sizeof(inputSprite[0]);
      toast_engi    14            
      toast_engi    15            // Gets X and Y size of output sprite.
      toast_engi    16            outputSprite->xMax = inputSprite[0];
    00000000 6352                   MOV.L       @R5,R3
      toast_engi    17            outputSprite->yMax = inputSprite[1];
      toast_engi    18            
      toast_engi    19            // Shifts data of the sprite 2 places to the left.
      toast_engi    20            for (i = 0; i < size; i++) inputSprite[i] = inputSprite[i+2];
    00000002 E700                   MOV         #0,R7
    00000004 1431                   MOV.L       R3,@(4,R4)
    00000006 E600                   MOV         #0,R6
    00000008 5251                   MOV.L       @(4,R5),R2
    0000000A E001                   MOV         #1,R0
    0000000C 1422                   MOV.L       R2,@(8,R4)
    0000000E 365C                   ADD         R5,R6
    00000010              L308:                             
    00000010 5362                   MOV.L       @(8,R6),R3
    00000012 7701                   ADD         #1,R7
    00000014 2632                   MOV.L       R3,@R6
    00000016 3703                   CMP/GE      R0,R7
    00000018 8FFA                   BF/S        L308
    0000001A 7604                   ADD         #4,R6
      toast_engi    21            
      toast_engi    22            // Points output sprite to input sprite.
      toast_engi    23            outputSprite->data = inputSprite;
      toast_engi    24    }
    0000001C 000B                   RTS
    0000001E 2452                   MOV.L       R5,@R4
      toast_engi    25    
      toast_engi    26    
      toast_engi    27    void Draw_Sprite_Scale(int x, int y, Sprite sprite, int scaleX, int scaleY, Camera camera)
    00000020              _Draw_Sprite_Scale:              ; function: Draw_Sprite_Scale
                                                           ; frame size=52
                                                           ; used runtime library name:
                                                           ; __divls
    00000020 2FE6                   MOV.L       R14,@-R15
    00000022 2FD6                   MOV.L       R13,@-R15
    00000024 2FC6                   MOV.L       R12,@-R15
    00000026 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000028 2FA6                   MOV.L       R10,@-R15
    0000002A 2F96                   MOV.L       R9,@-R15
    0000002C 2F86                   MOV.L       R8,@-R15
    0000002E 4F22                   STS.L       PR,@-R15
    00000030 4F12                   STS.L       MACL,@-R15
    00000032 7FF0                   ADD         #-16,R15
      toast_engi    28    {
      toast_engi    29            // Scaled X and Y size of sprite.
      toast_engi    30            int scaledXMax = sprite.xMax*scaleX/100 * camera.scale/100;
    00000034 D39E                   MOV.L       L327+2,R3  ; __divls
    00000036 6CF3                   MOV         R15,R12
    00000038 1F43                   MOV.L       R4,@(12,R15)
    0000003A 6EF3                   MOV         R15,R14
    0000003C 1F51                   MOV.L       R5,@(4,R15)
    0000003E E464                   MOV         #100,R4
    00000040 7C40                   ADD         #64,R12
    00000042 7E34                   ADD         #52,R14
    00000044 51E1                   MOV.L       @(4,R14),R1
    00000046 0167                   MUL.L       R6,R1
    00000048 011A                   STS         MACL,R1
    0000004A 430B                   JSR         @R3
    0000004C 6043                   MOV         R4,R0
    0000004E 55C2                   MOV.L       @(8,R12),R5
    00000050 D397                   MOV.L       L327+2,R3  ; __divls
    00000052 0057                   MUL.L       R5,R0
    00000054 011A                   STS         MACL,R1
    00000056 430B                   JSR         @R3
    00000058 6043                   MOV         R4,R0
    0000005A 2F02                   MOV.L       R0,@R15
      toast_engi    31            int scaledYMax = sprite.yMax*scaleY/100 * camera.scale/100;
    0000005C 51E2                   MOV.L       @(8,R14),R1
    0000005E 0177                   MUL.L       R7,R1
    00000060 D393                   MOV.L       L327+2,R3  ; __divls
    00000062 011A                   STS         MACL,R1
    00000064 430B                   JSR         @R3
    00000066 6043                   MOV         R4,R0
    00000068 0057                   MUL.L       R5,R0
    0000006A 011A                   STS         MACL,R1
    0000006C D390                   MOV.L       L327+2,R3  ; __divls
    0000006E 430B                   JSR         @R3
    00000070 6043                   MOV         R4,R0
    00000072 6A03                   MOV         R0,R10
      toast_engi    32            int i, j;
      toast_engi    33            int a, b;
      toast_engi    34            
      toast_engi    35            // For every point on the scaled sprite, draw the correct color.
      toast_engi    36            for (i = 0; i < scaledXMax; i++)
    00000074 A02F                   BRA         L309
    00000076 EB00                   MOV         #0,R11
    00000078              L310:                             
    00000078 53F3                   MOV.L       @(12,R15),R3
      toast_engi    37            {
      toast_engi    38                    for (j = 0; j < scaledYMax; j++)
    0000007A 4A15                   CMP/PL      R10
    0000007C ED00                   MOV         #0,R13
    0000007E 33BC                   ADD         R11,R3
    00000080 8F28                   BF/S        L311




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000082 1F32                   MOV.L       R3,@(8,R15)
    00000084              L312:                             
      toast_engi    39                    {
      toast_engi    40                            
      toast_engi    41                            a = (i * sprite.xMax) / scaledXMax + 2;                         // ( To avoid havi
                         +ng to type the same equation over and over.
    00000084 54E1                   MOV.L       @(4,R14),R4
    00000086 0B47                   MUL.L       R4,R11
    00000088 D389                   MOV.L       L327+2,R3  ; __divls
    0000008A 011A                   STS         MACL,R1
    0000008C 430B                   JSR         @R3
    0000008E 60F2                   MOV.L       @R15,R0
      toast_engi    42                            b = (j * sprite.xMax) / scaledYMax * sprite.xMax;                       // I'm uns
                         +ure how much time this actually saves. :P )
    00000090 0D47                   MUL.L       R4,R13
    00000092 6903                   MOV         R0,R9
    00000094 D386                   MOV.L       L327+2,R3  ; __divls
    00000096 011A                   STS         MACL,R1
    00000098 7902                   ADD         #2,R9
    0000009A 430B                   JSR         @R3
    0000009C 60A3                   MOV         R10,R0
    0000009E 0047                   MUL.L       R4,R0
      toast_engi    43                            
      toast_engi    44                            if (sprite.data[a + b] != 3) Bdisp_SetPoint_VRAM(x+i+camera.x, y+j+camera.y, sprit
                         +e.data[a + b]);
    000000A0 63E2                   MOV.L       @R14,R3
    000000A2 6093                   MOV         R9,R0
    000000A4 081A                   STS         MACL,R8
    000000A6 308C                   ADD         R8,R0
    000000A8 4008                   SHLL2       R0
    000000AA 003E                   MOV.L       @(R0,R3),R0
    000000AC 8803                   CMP/EQ      #3,R0
    000000AE 890E                   BT          L313
    000000B0 60E2                   MOV.L       @R14,R0
    000000B2 6693                   MOV         R9,R6
    000000B4 55F1                   MOV.L       @(4,R15),R5
    000000B6 368C                   ADD         R8,R6
    000000B8 53C1                   MOV.L       @(4,R12),R3
    000000BA 35DC                   ADD         R13,R5
    000000BC 54F2                   MOV.L       @(8,R15),R4
    000000BE 4608                   SHLL2       R6
    000000C0 066E                   MOV.L       @(R0,R6),R6
    000000C2 353C                   ADD         R3,R5
    000000C4 63C2                   MOV.L       @R12,R3
    000000C6 343C                   ADD         R3,R4
    000000C8 D37A                   MOV.L       L327+6,R3  ; _Bdisp_SetPoint_VRAM
    000000CA 430B                   JSR         @R3
    000000CC 0009                   NOP
    000000CE              L313:                             
    000000CE 7D01                   ADD         #1,R13
    000000D0 3DA3                   CMP/GE      R10,R13
    000000D2 8BD7                   BF          L312
    000000D4              L311:                             
    000000D4 7B01                   ADD         #1,R11
    000000D6              L309:                             
    000000D6 63F2                   MOV.L       @R15,R3
    000000D8 3B33                   CMP/GE      R3,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DA 8BCD                   BF          L310
      toast_engi    45                    }
      toast_engi    46            }
      toast_engi    47    }
    000000DC 7F10                   ADD         #16,R15
    000000DE 4F16                   LDS.L       @R15+,MACL
    000000E0 4F26                   LDS.L       @R15+,PR
    000000E2 68F6                   MOV.L       @R15+,R8
    000000E4 69F6                   MOV.L       @R15+,R9
    000000E6 6AF6                   MOV.L       @R15+,R10
    000000E8 6BF6                   MOV.L       @R15+,R11
    000000EA 6CF6                   MOV.L       @R15+,R12
    000000EC 6DF6                   MOV.L       @R15+,R13
    000000EE 000B                   RTS
    000000F0 6EF6                   MOV.L       @R15+,R14
      toast_engi    48    
      toast_engi    49    
      toast_engi    50    void Draw_Sprite(int x, int y, Sprite sprite)
    000000F2              _Draw_Sprite:                    ; function: Draw_Sprite
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    000000F2 4F22                   STS.L       PR,@-R15
      toast_engi    51    {
      toast_engi    52            Camera c = {0,0,100};
    000000F4 D270                   MOV.L       L327+10,R2 ; L284
    000000F6 7FF4                   ADD         #-12,R15
    000000F8 D370                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    000000FA 61F3                   MOV         R15,R1
    000000FC 430B                   JSR         @R3
    000000FE E00C                   MOV         #12,R0
      toast_engi    53            Draw_Sprite_Scale(x, y, sprite, 100, 100, c);   // Draws the sprite normally.
    00000100 D36E                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    00000102 62F3                   MOV         R15,R2
    00000104 E00C                   MOV         #12,R0
    00000106 3F08                   SUB         R0,R15
    00000108 430B                   JSR         @R3
    0000010A 61F3                   MOV         R15,R1
    0000010C D36B                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    0000010E 62F3                   MOV         R15,R2
    00000110 721C                   ADD         #28,R2
    00000112 E00C                   MOV         #12,R0
    00000114 3F08                   SUB         R0,R15
    00000116 430B                   JSR         @R3
    00000118 61F3                   MOV         R15,R1
    0000011A E764                   MOV         #100,R7
    0000011C BF80                   BSR         _Draw_Sprite_Scale
    0000011E 6673                   MOV         R7,R6
      toast_engi    54    }
    00000120 7F24                   ADD         #36,R15
    00000122 4F26                   LDS.L       @R15+,PR
    00000124 000B                   RTS
    00000126 0009                   NOP
      toast_engi    55    
      toast_engi    56    
      toast_engi    57    void Init_Tileset(Tileset *tileset, int numSprites, ...)
    00000128              _Init_Tileset:                   ; function: Init_Tileset




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=16
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000128 2FE6                   MOV.L       R14,@-R15
    0000012A 2FD6                   MOV.L       R13,@-R15
    0000012C 4F22                   STS.L       PR,@-R15
    0000012E 7FFC                   ADD         #-4,R15
    00000130 2F42                   MOV.L       R4,@R15
      toast_engi    58    {
      toast_engi    59            Sprite *spritesPtrTemp = malloc(sizeof(Sprite) * numSprites);
    00000132 54F4                   MOV.L       @(16,R15),R4
    00000134 6343                   MOV         R4,R3
    00000136 4400                   SHLL        R4
    00000138 343C                   ADD         R3,R4
    0000013A D361                   MOV.L       L327+18,R3 ; _malloc
    0000013C 430B                   JSR         @R3
    0000013E 4408                   SHLL2       R4
      toast_engi    60            int i;
      toast_engi    61            
      toast_engi    62            va_list args;
      toast_engi    63            va_start (args, numSprites);
    00000140 E503                   MOV         #3,R5
    00000142 64F3                   MOV         R15,R4
    00000144 7410                   ADD         #16,R4
    00000146 7404                   ADD         #4,R4
    00000148 2458                   TST         R5,R4
    0000014A 8D04                   BT/S        L314
    0000014C 6D03                   MOV         R0,R13
    0000014E 64F3                   MOV         R15,R4
    00000150 7410                   ADD         #16,R4
    00000152 A003                   BRA         L315
    00000154 7408                   ADD         #8,R4
    00000156              L314:                             
    00000156 64F3                   MOV         R15,R4
    00000158 7410                   ADD         #16,R4
    0000015A 7404                   ADD         #4,R4
    0000015C              L315:                             
      toast_engi    64            
      toast_engi    65            // Points spritesPtrTemp to all sprites in parameters.
      toast_engi    66            for (i = 0; i < numSprites; i++)
    0000015C A01A                   BRA         L316
    0000015E E600                   MOV         #0,R6
    00000160              L317:                             
      toast_engi    67            {
      toast_engi    68                    spritesPtrTemp[i] = va_arg(args, Sprite);
    00000160 6163                   MOV         R6,R1
    00000162 6363                   MOV         R6,R3
    00000164 4100                   SHLL        R1
    00000166 313C                   ADD         R3,R1
    00000168 4108                   SHLL2       R1
    0000016A 6743                   MOV         R4,R7
    0000016C 770C                   ADD         #12,R7
    0000016E 6273                   MOV         R7,R2
    00000170 2258                   TST         R5,R2
    00000172 8D02                   BT/S        L318
    00000174 31DC                   ADD         R13,R1
    00000176 A001                   BRA         L320




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000178 7410                   ADD         #16,R4
    0000017A              L318:                             
    0000017A 6473                   MOV         R7,R4
    0000017C              L320:                             
    0000017C 6E43                   MOV         R4,R14
    0000017E 7EF4                   ADD         #-12,R14
    00000180 62E3                   MOV         R14,R2
    00000182 2258                   TST         R5,R2
    00000184 8D02                   BT/S        L321
    00000186 E00C                   MOV         #12,R0
    00000188 6243                   MOV         R4,R2
    0000018A 72F0                   ADD         #-16,R2
    0000018C              L321:                             
    0000018C D34B                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    0000018E 430B                   JSR         @R3
    00000190 0009                   NOP
    00000192 7601                   ADD         #1,R6
    00000194              L316:                             
    00000194 52F4                   MOV.L       @(16,R15),R2
    00000196 3623                   CMP/GE      R2,R6
    00000198 8BE2                   BF          L317
      toast_engi    69            }
      toast_engi    70            va_end(args);
      toast_engi    71            
      toast_engi    72            tileset->sprites = spritesPtrTemp;
    0000019A 61F2                   MOV.L       @R15,R1
    0000019C 21D2                   MOV.L       R13,@R1
      toast_engi    73    }
    0000019E 7F04                   ADD         #4,R15
    000001A0 4F26                   LDS.L       @R15+,PR
    000001A2 6DF6                   MOV.L       @R15+,R13
    000001A4 000B                   RTS
    000001A6 6EF6                   MOV.L       @R15+,R14
      toast_engi    74    
      toast_engi    75    
      toast_engi    76    void Init_Tilemap(Tilemap *tilemap, Tileset tileset, int *map)
    000001A8              _Init_Tilemap:                   ; function: Init_Tilemap
                                                           ; frame size=0
      toast_engi    77    {
      toast_engi    78            int size;
      toast_engi    79            int i;
      toast_engi    80            
      toast_engi    81            // Size of map.
      toast_engi    82            size = map[0] * map[1];
    000001A8 6653                   MOV         R5,R6
      toast_engi    83            
      toast_engi    84            tilemap->tileset = tileset;
    000001AA 67F3                   MOV         R15,R7
    000001AC 6372                   MOV.L       @R7,R3
      toast_engi    85            
      toast_engi    86            tilemap->scaleX = 100;
    000001AE E264                   MOV         #100,R2
    000001B0 2432                   MOV.L       R3,@R4
      toast_engi    87            tilemap->scaleY = 100;
    000001B2 6323                   MOV         R2,R3
    000001B4 1421                   MOV.L       R2,@(4,R4)
    000001B6 1422                   MOV.L       R2,@(8,R4)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      toast_engi    88            tilemap->originX = 0;
    000001B8 E200                   MOV         #0,R2
      toast_engi    89            tilemap->originY = 0;
    000001BA 6323                   MOV         R2,R3
    000001BC 1423                   MOV.L       R2,@(12,R4)
    000001BE 1424                   MOV.L       R2,@(16,R4)
      toast_engi    90            tilemap->pixelSpacing = tileset.sprites[0].xMax;
    000001C0 6272                   MOV.L       @R7,R2
    000001C2 5321                   MOV.L       @(4,R2),R3
    000001C4 1435                   MOV.L       R3,@(20,R4)
      toast_engi    91            
      toast_engi    92            tilemap->xMax = map[0];
    000001C6 6252                   MOV.L       @R5,R2
    000001C8 1427                   MOV.L       R2,@(28,R4)
      toast_engi    93            tilemap->yMax = map[1];
    000001CA 5361                   MOV.L       @(4,R6),R3
    000001CC 1438                   MOV.L       R3,@(32,R4)
      toast_engi    94            
      toast_engi    95            tilemap->map = map;
      toast_engi    96    }
    000001CE 000B                   RTS
    000001D0 1466                   MOV.L       R6,@(24,R4)
      toast_engi    97    
      toast_engi    98    
      toast_engi    99    void Draw_Tilemap(Tilemap tilemap, Camera camera)
    000001D2              _Draw_Tilemap:                   ; function: Draw_Tilemap
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __divls, __quick_odd_mvn
    000001D2 2FE6                   MOV.L       R14,@-R15
    000001D4 2FD6                   MOV.L       R13,@-R15
    000001D6 2FC6                   MOV.L       R12,@-R15
    000001D8 2FB6                   MOV.L       R11,@-R15
      toast_engi   100    {
      toast_engi   101            int i,j;
      toast_engi   102            Sprite s;
      toast_engi   103            for (i = 0; i < tilemap.xMax; i++)
    000001DA EC64                   MOV         #100,R12
    000001DC 2FA6                   MOV.L       R10,@-R15
    000001DE 2F96                   MOV.L       R9,@-R15
    000001E0 2F86                   MOV.L       R8,@-R15
    000001E2 4F22                   STS.L       PR,@-R15
    000001E4 4F12                   STS.L       MACL,@-R15
    000001E6 7FE8                   ADD         #-24,R15
    000001E8 6DF3                   MOV         R15,R13
    000001EA 7D60                   ADD         #96,R13
    000001EC 6EF3                   MOV         R15,R14
    000001EE 7E3C                   ADD         #60,R14
    000001F0 A04F                   BRA         L322
    000001F2 EA00                   MOV         #0,R10
    000001F4              L323:                             
      toast_engi   104            {
      toast_engi   105                    for (j = 0; j < tilemap.yMax; j++)
    000001F4 A049                   BRA         L324
    000001F6 EB00                   MOV         #0,R11
    000001F8              L325:                             
    000001F8 59E7                   MOV.L       @(28,R14),R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001FA 0B97                   MUL.L       R9,R11
    000001FC 53E6                   MOV.L       @(24,R14),R3
    000001FE 091A                   STS         MACL,R9
    00000200 39AC                   ADD         R10,R9
    00000202 7902                   ADD         #2,R9
    00000204 4908                   SHLL2       R9
    00000206 393C                   ADD         R3,R9
    00000208 6092                   MOV.L       @R9,R0
    0000020A 88FF                   CMP/EQ      #-1,R0
    0000020C 893C                   BT          L326
      toast_engi   106                    {
      toast_engi   107                            
      toast_engi   108                            if (tilemap.map[i+2 + j*tilemap.xMax] != -1) 
      toast_engi   109                                    Draw_Sprite_Scale
      toast_engi   110                                    (
      toast_engi   111                                    (i*tilemap.pixelSpacing) * (tilemap.scaleX/100) * (camera.scale/100) + til
                         +emap.originX + camera.x,
      toast_engi   112                                    (j*tilemap.pixelSpacing) * (tilemap.scaleY/100) * (camera.scale/100) + til
                         +emap.originY + camera.y,
      toast_engi   113                                    tilemap.tileset.sprites[tilemap.map[i+2 + j*tilemap.xMax]],
      toast_engi   114                                    tilemap.scaleX, 
      toast_engi   115                                    tilemap.scaleY,
      toast_engi   116                                    camera
      toast_engi   117                                    );
    0000020E 62D3                   MOV         R13,R2
    00000210 D32A                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    00000212 E00C                   MOV         #12,R0
    00000214 3F08                   SUB         R0,R15
    00000216 430B                   JSR         @R3
    00000218 61F3                   MOV         R15,R1
    0000021A E00C                   MOV         #12,R0
    0000021C 6292                   MOV.L       @R9,R2
    0000021E 6323                   MOV         R2,R3
    00000220 61E2                   MOV.L       @R14,R1
    00000222 4200                   SHLL        R2
    00000224 323C                   ADD         R3,R2
    00000226 4208                   SHLL2       R2
    00000228 D324                   MOV.L       L327+14,R3 ; __quick_odd_mvn
    0000022A 3F08                   SUB         R0,R15
    0000022C 321C                   ADD         R1,R2
    0000022E 430B                   JSR         @R3
    00000230 61F3                   MOV         R15,R1
    00000232 57E2                   MOV.L       @(8,R14),R7
    00000234 D31E                   MOV.L       L327+2,R3  ; __divls
    00000236 1F76                   MOV.L       R7,@(24,R15)
    00000238 58E1                   MOV.L       @(4,R14),R8
    0000023A 6683                   MOV         R8,R6
    0000023C 55E5                   MOV.L       @(20,R14),R5
    0000023E 1F57                   MOV.L       R5,@(28,R15)
    00000240 0B57                   MUL.L       R5,R11
    00000242 051A                   STS         MACL,R5
    00000244 51F6                   MOV.L       @(24,R15),R1
    00000246 430B                   JSR         @R3
    00000248 60C3                   MOV         R12,R0
    0000024A 0507                   MUL.L       R0,R5
    0000024C 51D2                   MOV.L       @(8,R13),R1
    0000024E 051A                   STS         MACL,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000250 D317                   MOV.L       L327+2,R3  ; __divls
    00000252 430B                   JSR         @R3
    00000254 60C3                   MOV         R12,R0
    00000256 6163                   MOV         R6,R1
    00000258 1F08                   MOV.L       R0,@(32,R15)
    0000025A 0507                   MUL.L       R0,R5
    0000025C 53E4                   MOV.L       @(16,R14),R3
    0000025E 051A                   STS         MACL,R5
    00000260 52D1                   MOV.L       @(4,R13),R2
    00000262 353C                   ADD         R3,R5
    00000264 54F7                   MOV.L       @(28,R15),R4
    00000266 352C                   ADD         R2,R5
    00000268 D311                   MOV.L       L327+2,R3  ; __divls
    0000026A 0A47                   MUL.L       R4,R10
    0000026C 041A                   STS         MACL,R4
    0000026E 430B                   JSR         @R3
    00000270 60C3                   MOV         R12,R0
    00000272 0407                   MUL.L       R0,R4
    00000274 52F8                   MOV.L       @(32,R15),R2
    00000276 041A                   STS         MACL,R4
    00000278 0427                   MUL.L       R2,R4
    0000027A 041A                   STS         MACL,R4
    0000027C 53E3                   MOV.L       @(12,R14),R3
    0000027E 343C                   ADD         R3,R4
    00000280 62D2                   MOV.L       @R13,R2
    00000282 BECD                   BSR         _Draw_Sprite_Scale
    00000284 342C                   ADD         R2,R4
    00000286 7F18                   ADD         #24,R15
    00000288              L326:                             
    00000288 7B01                   ADD         #1,R11
    0000028A              L324:                             
    0000028A 52E8                   MOV.L       @(32,R14),R2
    0000028C 3B23                   CMP/GE      R2,R11
    0000028E 8BB3                   BF          L325
    00000290 7A01                   ADD         #1,R10
    00000292              L322:                             
    00000292 52E7                   MOV.L       @(28,R14),R2
    00000294 3A23                   CMP/GE      R2,R10
    00000296 8BAD                   BF          L323
      toast_engi   118                    }
      toast_engi   119            }
      toast_engi   120            
      toast_engi   121    }
    00000298 7F18                   ADD         #24,R15
    0000029A 4F16                   LDS.L       @R15+,MACL
    0000029C 4F26                   LDS.L       @R15+,PR
    0000029E 68F6                   MOV.L       @R15+,R8
    000002A0 69F6                   MOV.L       @R15+,R9
    000002A2 6AF6                   MOV.L       @R15+,R10
    000002A4 6BF6                   MOV.L       @R15+,R11
    000002A6 6CF6                   MOV.L       @R15+,R12
    000002A8 6DF6                   MOV.L       @R15+,R13
    000002AA 000B                   RTS
    000002AC 6EF6                   MOV.L       @R15+,R14
    000002AE              L327:                             
    000002AE 0000                   .DATA.W     0
    000002B0 <00000000>             .DATA.L     __divls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002B4 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    000002B8 <00000000>             .DATA.L     L284
    000002BC <00000000>             .DATA.L     __quick_odd_mvn
    000002C0 <00000000>             .DATA.L     _malloc
C   00000000              L284:
    00000000 0000000000             .DATA.L     H'00000000,H'00000000,H'00000064
             0000000000   
             0064         





















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 08-Jun-2023 16:34:04  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      121



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000002C4 Byte(s)
CONSTANT SECTION (C):                               0000000C Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000002D0 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            4
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           6
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            30






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\CEDDYD~1\AppData\Local\Temp\hmkDB3F.tmp 

